{"version":3,"sources":["signUp/components/ErrorMessage.jsx","signUp/components/TextInput.jsx","signUp/components/ListInput.jsx","signUp/components/AcceptRules.jsx","signUp/components/Header.jsx","signUp/components/SubmitButton.jsx","signUp/hooks/useForm.jsx","signUp/containers/SignUp.jsx","App.js","reportWebVitals.js","index.js"],"names":["ErrorMessage","valid","message","className","TextInput","value","onChange","type","id","label","placeholder","htmlFor","name","ListInput","options","list","map","text","index","AcceptRules","checked","href","Header","SubmitButton","disabled","useForm","useState","email","tel","lang","nameValid","emailValid","telValid","rules","formValid","formData","setFormData","setForm","e","target","prevState","fieldName","validName","validValue","test","validateField","setLang","setRules","LANGUAGES","SignUp","handleSubmit","formState","onSubmit","App","result","setResult","preventDefault","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0811967b.chunk.js","sourcesContent":["const ErrorMessage = ({ valid, message }) => {\r\n  if (!valid) {\r\n    return <p className=\"sign-up__error-message\">{message}</p>\r\n  }\r\n  return null\r\n}\r\n\r\nexport default ErrorMessage\r\n","import ErrorMessage from './ErrorMessage'\r\nconst ERROR = 'Введено не коректное значение'\r\n\r\nconst TextInput = ({\r\n  value,\r\n  valid,\r\n  onChange,\r\n  type,\r\n  id,\r\n  label,\r\n  placeholder,\r\n}) => {\r\n  return (\r\n    <div className=\"sign-up__text-input\">\r\n      <label htmlFor={id} className=\"sign-up__text-input_label\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        name={id}\r\n        id={id}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        className=\"sign-up__text-input_input\"\r\n      />\r\n      <ErrorMessage valid={valid} message={ERROR} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default TextInput\r\n","const ListInput = ({ value, onChange, id, label, placeholder, options }) => {\r\n  return (\r\n    <div className=\"sign-up__text-input\">\r\n      <label htmlFor={id} className=\"sign-up__text-input_label\">\r\n        {label}\r\n      </label>\r\n      <input\r\n        value={value}\r\n        onChange={onChange}\r\n        list={`${id}List`}\r\n        name={id}\r\n        id={id}\r\n        placeholder={placeholder}\r\n        className=\"sign-up__text-input_input sign-up__text-input_list \"\r\n      />\r\n      <datalist id={`${id}List`}>\r\n        {options.map((text, index) => (\r\n          <option key={`${index}+option`} value={text} />\r\n        ))}\r\n      </datalist>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ListInput\r\n","const AcceptRules = ({ checked = false, onChange }) => {\r\n  return (\r\n    <div className=\"sign-up__rules\">\r\n      <input\r\n        checked={checked}\r\n        onChange={onChange}\r\n        id=\"accept-rules\"\r\n        className=\"sign-up__rules_accept-checkbox\"\r\n        type=\"checkbox\"\r\n      />\r\n      <label htmlFor=\"accept-rules\" className=\"sign-up__rules_accept-text\">\r\n        Принимаю{' '}\r\n        <a className=\"sign-up__link\" href=\"/#\">\r\n          условия\r\n        </a>{' '}\r\n        использования\r\n      </label>\r\n    </div>\r\n  )\r\n}\r\nexport default AcceptRules\r\n","import { Fragment } from 'react'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Fragment>\r\n      <p className=\"sign-up__title\">Регистрация</p>\r\n      <div className=\"sign-up__subtitle\">\r\n        <p className=\"sign-up__subtitle_question\">Уже есть аккаунт?</p>\r\n        <a className=\"sign-up__subtitle_login sign-up__link\" href=\"/#\">\r\n          Войти\r\n        </a>\r\n      </div>\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","const SubmitButton = ({ text, disabled = false }) => {\r\n  return (\r\n    <button disabled={disabled} type=\"submit\" className=\"sign-up__button\">\r\n      {text}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default SubmitButton\r\n","import { useState } from 'react'\r\n\r\nconst useForm = () => {\r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    email: '',\r\n    tel: '',\r\n    lang: '',\r\n    nameValid: false,\r\n    emailValid: false,\r\n    telValid: false,\r\n    rules: false,\r\n    formValid: false,\r\n  })\r\n  const { nameValid, emailValid, telValid, lang, rules } = formData\r\n\r\n  const validateField = (fieldName, value) => {\r\n    switch (fieldName) {\r\n      case 'email':\r\n        return {\r\n          validName: 'emailValid',\r\n          validValue: /^\\w+@\\w+.\\w+$/.test(value),\r\n        }\r\n\r\n      case 'name':\r\n        return {\r\n          validName: 'nameValid',\r\n          validValue: /^[a-zA-ZА-Яа-я\\s-]+$/.test(value),\r\n        }\r\n\r\n      case 'tel':\r\n        return {\r\n          validName: 'telValid',\r\n          validValue: /^[0-9()-+]+$/.test(value),\r\n        }\r\n      default:\r\n        break\r\n    }\r\n  }\r\n\r\n  let formValid = nameValid && emailValid && telValid && lang && rules\r\n  return {\r\n    formData,\r\n    formValid,\r\n    setForm: (e) => {\r\n      let name = e.target.name\r\n      let value = e.target.value\r\n\r\n      setFormData((prevState) => ({ ...prevState, [name]: value }))\r\n      const valid = validateField(name, value)\r\n      setFormData((prevState) => ({\r\n        ...prevState,\r\n        [valid.validName]: valid.validValue,\r\n      }))\r\n    },\r\n    setLang: (e) =>\r\n      setFormData((prevState) => ({ ...prevState, lang: e.target.value })),\r\n    setRules: () =>\r\n      setFormData((prevState) => ({ ...prevState, rules: !formData.rules })),\r\n  }\r\n}\r\n\r\nexport default useForm\r\n","import TextInput from '../components/TextInput'\r\nimport ListInput from '../components/ListInput'\r\nimport AcceptRules from '../components/AcceptRules'\r\nimport Header from '../components/Header'\r\nimport SubmitButton from '../components/SubmitButton'\r\n\r\nimport useForm from '../hooks/useForm'\r\n\r\nimport '../styles/SignUp.scss'\r\n\r\nconst LANGUAGES = ['Русский', 'Английский', 'Китайский', 'Испанский']\r\n\r\nconst SignUp = ({ handleSubmit }) => {\r\n  const formState = useForm()\r\n  const { formData, setForm, setLang, setRules, formValid } = formState\r\n\r\n  const onSubmit = (e) => {\r\n    handleSubmit(e, formData)\r\n  }\r\n\r\n  return (\r\n    <div className=\"sign-up\">\r\n      <form onSubmit={onSubmit}>\r\n        <Header />\r\n        <TextInput\r\n          value={formData.name}\r\n          valid={formData.nameValid}\r\n          onChange={setForm}\r\n          id=\"name\"\r\n          type=\"text\"\r\n          label=\"Имя\"\r\n          placeholder=\"Введите Ваше Имя\"\r\n        />\r\n        <TextInput\r\n          value={formData.email}\r\n          valid={formData.emailValid}\r\n          onChange={setForm}\r\n          id=\"email\"\r\n          type=\"text\"\r\n          label=\"Email\"\r\n          placeholder=\"Введите ваш email\"\r\n        />\r\n        <TextInput\r\n          value={formData.tel}\r\n          valid={formData.telValid}\r\n          onChange={setForm}\r\n          id=\"tel\"\r\n          type=\"tel\"\r\n          label=\"Номер телефона\"\r\n          placeholder=\"Введите номер телефона\"\r\n        />\r\n        <ListInput\r\n          value={formData.lang}\r\n          onChange={setLang}\r\n          id=\"lang\"\r\n          label=\"Язык\"\r\n          placeholder=\"Язык\"\r\n          options={LANGUAGES}\r\n        />\r\n        <AcceptRules checked={formData.rules} onChange={setRules} />\r\n        <SubmitButton text=\"Зарегистрироваться\" disabled={!formValid} />\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","import { useState } from 'react'\n\nimport './normalize.css'\nimport './App.scss'\n\nimport SignUp from './signUp/containers/SignUp'\n\nfunction App() {\n  const [result, setResult] = useState({})\n\n  const handleSubmit = (e, formData) => {\n    e.preventDefault()\n    setResult({\n      name: formData.name,\n      email: formData.email,\n      tel: formData.tel,\n      lang: formData.lang,\n      rules: formData.rules,\n    })\n  }\n  return (\n    <div className=\"app\">\n      <main className=\"main\">\n        <SignUp handleSubmit={handleSubmit} />\n      </main>\n      {result.name && (\n        <div className=\"result\">\n          <p>Name: {result.name}</p>\n          <p>Email: {result.email}</p>\n          <p>Tel: {result.tel}</p>\n          <p>Languge: {result.lang}</p>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}